
turn 90
%Program for final project

%Initialize the localizer
laser "push t='0.1' cmd='localize'"
wait 1

%Initialize the planner and add points and connections
laser "resetplanner"

%Goal points 
laser "addpoint pno=1 x=-0.25 y=1.5"
laser "addpoint pno=2 x=0.25 y=1.5"
laser "addpoint pno=3 x=3.75 y=1.5"
laser "addpoint pno=4 x=4.25 y=1.5"
laser "addpoint pno=5 x=-0.25 y=3.5"
laser "addpoint pno=6 x=0.25 y=3.5"
laser "addpoint pno=7 x=3.75 y=3.5"
laser "addpoint pno=8 x=4.25 y=3.5"
laser "addpoint pno=9 x=0.25 y=4.5"
laser "addpoint pno=10 x=3.75 y=4.5"
laser "addpoint pno=11 x=0.5 y=4.7"
laser "addpoint pno=12 x=3.5 y=4.7"
laser "addpoint pno=13 x=1.75 y=4.0"
laser "addpoint pno=14 x=2.25 y=4.0"
laser "addpoint pno=15 x=-0.25 y=2.5"
laser "addpoint pno=16 x=0.25 y=2.5"
laser "addpoint pno=17 x=3.75 y=2.5"
laser "addpoint pno=18 x=4.25 y=2.5"
laser "addpoint pno=19 x=0.25 y=0.25"
laser "addpoint pno=20 x=3.75 y=0.25"
laser "addpoint pno=21 x=0.25 y=2.25"
laser "addpoint pno=22 x=2.0 y=2.25"
laser "addpoint pno=23 x=3.75 y=2.25"
laser "addpoint pno=24 x=1.25 y=3.3"
laser "addpoint pno=25 x=2.0 y=3.3"
laser "addpoint pno=26 x=2.75 y=3.3"
laser "addpoint pno=27 x=1.25 y=4.1"
laser "addpoint pno=28 x=2.75 y=4.1"


laser "addcon pno1=19 pno2=2"
laser "addcon pno1=2 pno2=19"
laser "addcon pno1=2 pno2=21"
laser "addcon pno1=21 pno2=2"
laser "addcon pno1=21 pno2=16"
laser "addcon pno1=16 pno2=21"
laser "addcon pno1=16 pno2=15"
laser "addcon pno1=15 pno2=16"
laser "addcon pno1=16 pno2=6"
laser "addcon pno1=6 pno2=16"
laser "addcon pno1=15 pno2=5"
laser "addcon pno1=5 pno2=15"
laser "addcon pno1=15 pno2=1"
laser "addcon pno1=1 pno2=15"
laser "addcon pno1=6 pno2=9"
laser "addcon pno1=9 pno2=6"
laser "addcon pno1=9 pno2=11"
laser "addcon pno1=11 pno2=9"
laser "addcon pno1=11 pno2=12"
laser "addcon pno1=12 pno2=11"
laser "addcon pno1=12 pno2=10"
laser "addcon pno1=10 pno2=12"
laser "addcon pno1=10 pno2=7"
laser "addcon pno1=7 pno2=10"
laser "addcon pno1=7 pno2=17"
laser "addcon pno1=17 pno2=7"
laser "addcon pno1=17 pno2=18"
laser "addcon pno1=18 pno2=17"
laser "addcon pno1=18 pno2=8"
laser "addcon pno1=8 pno2=18"
laser "addcon pno1=18 pno2=4"
laser "addcon pno1=4 pno2=18"
laser "addcon pno1=17 pno2=23"
laser "addcon pno1=23 pno2=17"
laser "addcon pno1=23 pno2=20"
laser "addcon pno1=20 pno2=23"
laser "addcon pno1=23 pno2=22"
laser "addcon pno1=22 pno2=23"
laser "addcon pno1=22 pno2=21"
laser "addcon pno1=21 pno2=22"
laser "addcon pno1=22 pno2=25"
laser "addcon pno1=25 pno2=22"
laser "addcon pno1=25 pno2=24"
laser "addcon pno1=24 pno2=25"
laser "addcon pno1=24 pno2=27"
laser "addcon pno1=27 pno2=24"
laser "addcon pno1=27 pno2=13"
laser "addcon pno1=13 pno2=27"
laser "addcon pno1=25 pno2=26"
laser "addcon pno1=26 pno2=25"
laser "addcon pno1=26 pno2=28"
laser "addcon pno1=28 pno2=26"
laser "addcon pno1=28 pno2=14"
laser "addcon pno1=14 pno2=28"
laser "addcon pno1=20 pno2=19"
laser "addcon pno1=19 pno2=20"
laser "addcon pno1=3 pno2=23"
laser "addcon pno1=23 pno2=3"
laser "addcon pno1=3 pno2=20"
laser "addcon pno1=20 pno2=3"


laser "calculatecost"

%Define guidemarks:
array "gmx" 15
array "gmy" 15
array "gmth" 15
pi=3.1416
gmx[1]=-0.25
gmx[2]=0.25
gmx[3]=3.75
gmx[4]=4.25
gmx[5]=-0.25
gmx[6]=0.25
gmx[7]=3.75
gmx[8]=4.25
gmx[9]=0.25
gmx[10]=4.25
gmx[11]=0.5
gmx[12]=3.5
gmx[13]=1.75
gmx[14]=2.25

gmy[1]=1.5
gmy[2]=1.5
gmy[3]=1.5
gmy[4]=1.5
gmy[5]=3.5
gmy[6]=3.5
gmy[7]=3.5
gmy[8]=3.5
gmy[9]=4.6
gmy[10]=4.6
gmy[11]=4.75
gmy[12]=4.75
gmy[13]=4.0
gmy[14]=4.0

gmth[1]=pi/2
gmth[2]=pi/2
gmth[3]=pi/2
gmth[4]=pi/2
gmth[5]=pi/2
gmth[6]=pi/2
gmth[7]=pi/2
gmth[8]=pi/2
gmth[9]=pi/2
gmth[10]=pi/2
gmth[11]=0
gmth[12]=0
gmth[13]=0
gmth[14]=0


%The order is:
% 2, 7, 11, 3, 6, 12, 13


num = $fiducialid

%Starting program 1
stringcat "findroute startx=0.2 starty=0.2 endx=0.25 endy=1.5"
laser "$string"
wait 0.5
eval $l4
point = $l4
label "start"
wait 0.5
stringcat "getpoint p= " point
laser "$string"
wait 0.5
eval $l5
eval $l6
eval $l7
drivew $l5 $l6 $l7 "rad" : ($targetdist < 0.5)
point = point - 1
if(point >= 0) "start"
stop


%num = $fiducialid
eval num
xOld = 0.25
yOld = 1.5
xNew = gmx[num]
yNew = gmy[num]
eval xNew
eval yNew

wait 1


%Starting program 2
stringcat "findroute startx="xOld" starty="yOld" endx="xNew" endy="yNew
laser "$string"
wait 1
eval $l4
point = $l4
label "start2"
wait 0.5
stringcat "getpoint p= " point
laser "$string"
wait 0.5
eval $l5
eval $l6
eval $l7

relativeAngle=$l7-$odoth
eval relativeAngle

turn relativeAngle "rad"

drivew $l5 $l6 $l7 "rad" : ($targetdist < 0.1)
stop


point = point - 1
if(point >= 0) "start2"
stop

num = $fiducialid
eval num
xOld = xNew
yOld = yNew
xNew = gmx[num]
yNew = gmy[num]
eval xNew
eval yNew

%Starting program 3
stringcat "findroute startx="xOld" starty="yOld" endx="xNew" endy="yNew
laser "$string"
wait 0.5
eval $l4
point = $l4
label "start3"
wait 0.5
stringcat "getpoint p= " point
laser "$string"
wait 0.5
eval $l5
eval $l6
eval $l7
drivew $l5 $l6 $l7 "rad" : ($targetdist < 0.5)
point = point - 1
if(point >= 0) "start3"
stop

num = $fiducialid
eval num
xOld = xNew
yOld = yNew
xNew = gmx[num]
yNew = gmy[num]
eval xNew
eval yNew

%Starting program 4
stringcat "findroute startx="xOld" starty="yOld" endx="xNew" endy="yNew
laser "$string"
wait 0.5
eval $l4
point = $l4
label "start4"
wait 0.5
stringcat "getpoint p= " point
laser "$string"
wait 0.5
eval $l5
eval $l6
eval $l7
drivew $l5 $l6 $l7 "rad" : ($targetdist < 0.5)
point = point - 1
if(point >= 0) "start4"

num = $fiducialid
eval num
xOld = xNew
yOld = yNew
xNew = gmx[num]
yNew = gmy[num]
eval xNew
eval yNew


%Starting program 5
stringcat "findroute startx="xOld" starty="yOld" endx="xNew" endy="yNew
laser "$string"
wait 0.5
eval $l4
point = $l4
label "start5"
wait 0.5
stringcat "getpoint p= " point
laser "$string"
wait 0.5
eval $l5
eval $l6
eval $l7
drivew $l5 $l6 $l7 "rad" : ($targetdist < 0.5)
point = point - 1
if(point >= 0) "start5"

num = $fiducialid
eval num
xOld = xNew
yOld = yNew
xNew = gmx[num]
yNew = gmy[num]
eval xNew
eval yNew


%Starting program 6
stringcat "findroute startx="xOld" starty="yOld" endx="xNew" endy="yNew
laser "$string"
wait 0.5
eval $l4
point = $l4
label "start6"
wait 0.5
stringcat "getpoint p= " point
laser "$string"
wait 0.5
eval $l5
eval $l6
eval $l7
drivew $l5 $l6 $l7 "rad" : ($targetdist < 0.5)
point = point - 1
if(point >= 0) "start6"

num = $fiducialid
eval num
xOld = xNew
yOld = yNew
xNew = gmx[num]
yNew = gmy[num]
eval xNew
eval yNew


%Starting program 7
stringcat "findroute startx="xOld" starty="yOld" endx="xNew" endy="yNew
laser "$string"
wait 0.5
eval $l4
point = $l4
label "start7"
wait 0.5
stringcat "getpoint p= " point
laser "$string"
wait 0.5
eval $l5
eval $l6
eval $l7
drivew $l5 $l6 $l7 "rad" : ($targetdist < 0.5)
point = point - 1
if(point >= 0) "start7"

num = $fiducialid
eval num
xOld = xNew
yOld = yNew
xNew = 0.2
yNew = 0.2
eval xNew
eval yNew


%Starting program 8
stringcat "findroute startx="xOld" starty="yOld" endx="xNew" endy="yNew
laser "$string"
wait 0.5
eval $l4
point = $l4
label "start8"
wait 0.5
stringcat "getpoint p= " point
laser "$string"
wait 0.5
eval $l5
eval $l6
eval $l7
drivew $l5 $l6 $l7 "rad" : ($targetdist < 0.5)
point = point - 1
if(point >= 0) "start8"

fwd 0.3
turn 90

stop

%Make something that goes to the start field with 45 degrees angle first.

startoffset = 0.2


%Find the box. $l9 is x, $l10 is y, and $l11 is theta, $l12 is the angle of the corner, $l15 is the length of the longest
%observed line, $l9 is the length of the shortest observed line, $l17 is the relative angle to the longest observed
%line, $l18 is the relative angle of the shortest observed line.

turn 90 @v0.5
fwd 0.25

turn -90 @v0.5

drive @v0.5 :($irdistleft < 0.88 | $irdistfrontmiddle < 0.7)

stop
 
if ($irdistleft < 0.88 ) "objectfound"

turn 90
fwd 0.6
turn -90

drive @v-0.5 :($irdistleft < 0.88)

fwd -0.26
goto "objectfound"



label "objectfound"

fwd 0.26



turn 90

drive @v0.5 :($irdistfrontmiddle < 0.3)

stop

%goto "stop"



%laser "scanpush cmd = 'zoneobst' "
%wait 1
log "$l9" "$l10" "$l11"

%Final pose

finalX = 0
finalY = 0
finalTheta = 0

%X = $l9
%Y = $l10
%theta = $l11

%X = X - 0.5
%Y = Y - 0.5
%eval X; Y; theta

%drive X Y theta : ($targetdist < 0.25)
%stop



sum1 = 0
sum2 = 0
sum3 = 0
sum4 = 0

i = 0


label "zoning"

laser "scanpush cmd = 'zoneobst' "
wait 1

X = $l9
Y = $l10
theta = $l11


log "$odox" "$odoy" "$odoth"
%Final pose
%X = $l9
%Y = $l10
%theta = $l11
%cornerAngle = $l12
%longestLength = $l105
%shortestLength = $l106
%longestAngle = $l107
%shortestAngle = $l108
object1 = $l13
object2 = $l14
object3 = $l15
object4 = $l16


sum1 = sum1 + object1
sum2 = sum2 + object2
sum3 = sum3 + object3
sum4 = sum4 + object4

eval sum1; sum2; sum3; sum4
eval $odox; $odoy; $odoth
eval X; Y; theta



i = i + 1
if (i > 4) "finish" %Break out of the loop when we have seen 4 sides

turn -90
followwall "l" 0.3 :($drivendist > 0.9)
stop
turn 90

goto "zoning"


label "finish"
i = 0

%Check object confidence:
if ((sum1 > sum2) & (sum1 > sum3) & (sum1 > sum4)) "Object1"
if ((sum2 > sum1) & (sum2 > sum3) & (sum2 > sum4)) "Object2"
if ((sum3 > sum1) & (sum3 > sum2) & (sum3 > sum4)) "Object3"
if ((sum4 > sum1) & (sum4 > sum3) & (sum4 > sum1)) "Object4"


turn -90
followwall "l" 0.3 :($drivendist > 0.3)
stop
turn 90

goto "zoning"






%Squares
label "Object1"
%Print out "The object is object 1"

laser "scanpush cmd = 'zoneobst' "
wait 1
X = $l9
Y = $l10
theta = $l11
object = 1
eval X; Y; theta

odox=$odox+startoffset
odoy=$odoy+startoffset
trans odox odoy $odoth X Y theta
finalX = $res0
finalY = $res1
finalTheta = $res2


goto "stop"

label "Object2"
%Print out "The object is object 2"
laser "scanpush cmd = 'zoneobst' "
wait 1
X = $l9
Y = $l10
theta = $l11
eval X; Y; theta
eval $odox; $odoy; $odoth
object = 2
odox=$odox+startoffset
odoy=$odoy+0.2
trans odox odoy $odoth X Y theta
finalX = $res0
finalY = $res1
finalTheta = $res2

goto "stop"

%Triangles/Triangulation

label "Object3"
%Print out "The object is object 3"
object = 3
goto "Triangulation"



label "Object4"
%Print out "The object is object 4"
object = 4
goto "Triangulation"


label "Triangulation"



laser "scanpush cmd = 'zoneobst' "
wait 1

X = $l9
Y = $l10
theta = $l11
cornerAngle = $l12

cornerX = $l17
cornerY = $l18

eval cornerAngle

if  ((cornerAngle < 1.6) & (cornerAngle > 1.4)) "finish2" %Break out of the loop when we have seen 4 sides

i = i + 1

%if (i > 3) "adjustPosition" %Break out of the loop when we have seen 4 sides


turn -90
followwall "l" 0.3 :($drivendist > 0.6)
stop
turn 90

goto "Triangulation"



label "finish2"
odox=$odox+startoffset
odoy=$odoy+startoffset
trans odox odoy $odoth cornerX cornerY theta
finalX = $res0
finalY = $res1
finalTheta = $res2

goto "stop"




label "stop"
turn 90
followwall "r" 0.3 :($odoth > 3)
stop





drivew 0.2 0.2 3.14 "rad" :($irdistfrontmiddle < 0.2)
stop
turn -135
fwd -0.2
turn 45

stop





